image: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/golang:1.19-alpine

variables:
  ADD_DATA: 'data from vars.yml'
  DOCKER_AUTH_CONFIG: '{"auths":{"gitlab.ozon.dev":{"username":"$CI_DEPENDENCY_PROXY_USER","password":"$CI_DEPENDENCY_PROXY_PASSWORD"}}}'

stages:
  - build
  - e2e

pre-commit:
  stage: build
  image: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/kiwicom/pre-commit
  script:
    - pre-commit run -a

build:
  stage: build
  script:
    - apk add --update make curl git protoc protobuf protobuf-dev build-base
    - make deps-go
    - make build
  artifacts:
    paths:
      - bin/
    expire_in: 1 days

linter:
  stage: build
  image: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/golangci/golangci-lint
  script:
    - golangci-lint run --new-from-rev 09cb7872e296d9e9fa8d4f816bb73cf25706b44a -v


unit:
  stage: build
  before_script:
    - apk add --update make curl git protoc protobuf protobuf-dev build-base
    - go install gotest.tools/gotestsum@latest
    # - ./bin/grpc-server & # Может быть фигней
    # - sleep 5
  script:
    - make gotestsum
  coverage: '/^total:\s+\(statements\)\s+\d+.\d+%$/'
  artifacts:
    when: always
    paths:
      - json-report.txt
    reports:
      junit: unit-tests.xml


grpc-test:
  stage: e2e
  services:
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/postgres:12
      alias: postgres
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/confluentinc/cp-zookeeper:7.1.0
      alias: zookeeper
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/confluentinc/cp-kafka:7.1.0
      alias: kafka_1
  variables:
    # enable network
    FF_NETWORK_PER_BUILD: 1
    # postgres variables
    POSTGRES_USER: docker
    POSTGRES_PASSWORD: docker
    POSTGRES_DB: act_device_api
    # zookeeper variables
    zk_id: "1"
    ZOOKEEPER_CLIENT_PORT: 32181
    ZOOKEEPER_TICK_TIME: 2000
    ZOOKEEPER_SYNC_LIMIT: 2
    # kafka variables
    KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
    KAFKA_LISTENERS: "INTERNAL://kafka_1:9092,OUTSIDE://kafka_1:9094"
    KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka_1:9092,OUTSIDE://localhost:9094"
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT"
    KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  before_script:
    - apk add --update make curl git protoc protobuf protobuf-dev build-base
    - go install gotest.tools/gotestsum@latest
    - make deps-go
    - ./bin/grpc-server &
    - sleep 5
  script:
    - go test -json -tags grpc_test ./... > out_grpc.json
    - cat out_grpc.json
  needs:
    - build
    - unit
  
http-test:
  stage: e2e
  services:
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/postgres:12
      alias: postgres
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/confluentinc/cp-zookeeper:7.1.0
      alias: zookeeper
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/confluentinc/cp-kafka:7.1.0
      alias: kafka_1
    - name: gitlab.ozon.dev/qa/classroom-4/students/dependency_proxy/containers/jaegertracing/all-in-one:1.32
      alias: jaeger
  variables:
    # enable network
    FF_NETWORK_PER_BUILD: 1
    # postgres variables
    POSTGRES_USER: docker
    POSTGRES_PASSWORD: docker
    POSTGRES_DB: act_device_api
    # zookeeper variables
    zk_id: "1"
    ZOOKEEPER_CLIENT_PORT: 32181
    ZOOKEEPER_TICK_TIME: 2000
    ZOOKEEPER_SYNC_LIMIT: 2
    # kafka variables
    KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
    KAFKA_LISTENERS: "INTERNAL://kafka_1:9092,OUTSIDE://kafka_1:9094"
    KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka_1:9092,OUTSIDE://localhost:9094"
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT"
    KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  before_script:
    - apk add --update make curl git protoc protobuf protobuf-dev build-base
    - go install gotest.tools/gotestsum@latest
    - make deps-go
    - ./bin/grpc-server &
    - sleep 5
  script:
    - go test -json -tags http_test ./... > out_http.json
    - cat out_http.json
  needs:
    - build
    - unit


trigger_job:
  trigger:
    include: prod.gitlab-ci.yml
    strategy: depend